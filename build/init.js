// Generated by CoffeeScript 1.7.1
(function() {
  var ParserResults, casper, init, loadMoreReviews, parseReviews, url;

  casper = require("casper").create({
    logLevel: "debug"
  });

  casper.on('remote.message', function(message) {
    return this.echo(message);
  });

  url = "https://plus.google.com/106797324517565881930/about?hl=en-US";

  ParserResults = [];

  init = function() {
    casper.start(url);
    casper.then(function() {
      var nextBtnElement;
      this.page.injectJs('bower_components/jquery/dist/jquery.js');
      this.page.injectJs('build/parser.js');
      this.evaluate(function() {
        return window.jq = $.noConflict(true);
      });
      nextBtnElement = this.evaluate(function() {
        return jq(".d-s.L5.r0");
      });
      casper.waitFor(function() {
        return casper.evaluate(function() {
          return window.googlePlusParser !== void 0;
        });
      }, parseReviews);
      return;
      if (!nextBtnElement) {
        console.log("parseReviews");
        return parseReviews();
      } else {
        console.log("loadMoreReviews");
        return loadMoreReviews(parseReviews);
      }
    });
    return casper.run();
  };

  parseReviews = function() {
    return casper.evaluate(function() {
      return window.googlePlusParser.parseReviews();
    }, function() {
      return console.log("parseReviews parsed");
    }, function() {
      return console.log("timeout");
    });
  };

  loadMoreReviews = function(cb) {
    var nextBtnSelector;
    nextBtnSelector = ".d-s.L5.r0";
    casper.click(nextBtnSelector);
    return casper.waitFor(function() {
      return this.evaluate(function() {
        console.log(window.getComputedStyle(nextBtnSelector).display);
        return window.getComputedStyle(nextBtnSelector).display === "none";
      });
    }, function() {
      return console.log("THEN!!!");
    });
  };

  init();

}).call(this);
